[{"D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\index.js":"1","D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\App.jsx":"2","D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\store.js":"3","D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\reportWebVitals.js":"4","D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\Cart\\Cart.jsx":"5","D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\Authentication\\SignIn.jsx":"6","D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\Home\\Home.jsx":"7","D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\Detail\\Detail.jsx":"8","D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\History\\History.jsx":"9","D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\Checkout\\Checkout.jsx":"10","D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\Shop\\Shop.jsx":"11","D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\Authentication\\SignUp.jsx":"12","D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\Share\\Footer\\Footer.jsx":"13","D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\Share\\Header\\Header.jsx":"14","D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\Share\\Chat\\Chat.jsx":"15","D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\convertMoney.js":"16","D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\Authentication\\LogoutLink.jsx":"17","D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\Authentication\\Name.jsx":"18","D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\API\\UserAPI.jsx":"19","D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\Authentication\\LoginLink.jsx":"20","D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\Cart\\Component\\ListCart.jsx":"21","D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\API\\ProductAPI.jsx":"22","D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\API\\CartAPI.jsx":"23","D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\API\\MessengerAPI.jsx":"24","D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\API\\CommentAPI.jsx":"25","D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\API\\ChatRoomsAPI.jsx":"26","D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\History\\Component\\DetailHistory.jsx":"27","D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\History\\Component\\MainHistory.jsx":"28","D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\Share\\img\\Image.jsx":"29","D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\Shop\\Component\\Search.jsx":"30","D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\Shop\\Component\\Pagination.jsx":"31","D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\Shop\\Component\\SortProduct.jsx":"32","D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\Shop\\Component\\Products.jsx":"33","D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\Shop\\Component\\IndexPage.jsx":"34","D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\API\\HistoryAPI.jsx":"35","D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\API\\axiosClient.jsx":"36","D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\ScrollToWrap.jsx":"37"},{"size":504,"mtime":1668970761210,"results":"38","hashOfConfig":"39"},{"size":1354,"mtime":1668957093975,"results":"40","hashOfConfig":"39"},{"size":153,"mtime":1662556007000,"results":"41","hashOfConfig":"39"},{"size":396,"mtime":1662556007000,"results":"42","hashOfConfig":"39"},{"size":6072,"mtime":1668953788190,"results":"43","hashOfConfig":"39"},{"size":2198,"mtime":1668952162624,"results":"44","hashOfConfig":"39"},{"size":12187,"mtime":1668621445614,"results":"45","hashOfConfig":"39"},{"size":16352,"mtime":1668954082705,"results":"46","hashOfConfig":"39"},{"size":405,"mtime":1668933450548,"results":"47","hashOfConfig":"39"},{"size":7654,"mtime":1668958541038,"results":"48","hashOfConfig":"39"},{"size":12538,"mtime":1668955990192,"results":"49","hashOfConfig":"39"},{"size":6656,"mtime":1667619119812,"results":"50","hashOfConfig":"39"},{"size":2051,"mtime":1662556007000,"results":"51","hashOfConfig":"39"},{"size":2662,"mtime":1668958882110,"results":"52","hashOfConfig":"39"},{"size":7102,"mtime":1668970616028,"results":"53","hashOfConfig":"39"},{"size":290,"mtime":1662556007000,"results":"54","hashOfConfig":"39"},{"size":284,"mtime":1668516332069,"results":"55","hashOfConfig":"39"},{"size":875,"mtime":1668936850630,"results":"56","hashOfConfig":"39"},{"size":579,"mtime":1668950354092,"results":"57","hashOfConfig":"39"},{"size":322,"mtime":1669022966714,"results":"58","hashOfConfig":"39"},{"size":5562,"mtime":1667661634359,"results":"59","hashOfConfig":"39"},{"size":500,"mtime":1667306514057,"results":"60","hashOfConfig":"39"},{"size":554,"mtime":1668521888458,"results":"61","hashOfConfig":"39"},{"size":419,"mtime":1662556007000,"results":"62","hashOfConfig":"39"},{"size":346,"mtime":1668568556993,"results":"63","hashOfConfig":"39"},{"size":425,"mtime":1668964779986,"results":"64","hashOfConfig":"39"},{"size":4915,"mtime":1668621703825,"results":"65","hashOfConfig":"39"},{"size":5459,"mtime":1668621588349,"results":"66","hashOfConfig":"39"},{"size":341,"mtime":1662556007000,"results":"67","hashOfConfig":"39"},{"size":985,"mtime":1667316516781,"results":"68","hashOfConfig":"39"},{"size":1934,"mtime":1667311700773,"results":"69","hashOfConfig":"39"},{"size":694,"mtime":1662556007000,"results":"70","hashOfConfig":"39"},{"size":2933,"mtime":1668620895828,"results":"71","hashOfConfig":"39"},{"size":953,"mtime":1668651149328,"results":"72","hashOfConfig":"39"},{"size":373,"mtime":1668517932499,"results":"73","hashOfConfig":"39"},{"size":922,"mtime":1669022677601,"results":"74","hashOfConfig":"39"},{"size":328,"mtime":1667282418091,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"1gnj4fa",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"78"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"78"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"78"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"78"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"78"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"78"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"78"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"78"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"78"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"156"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\index.js",[],["163","164"],"D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\App.jsx",[],"D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\store.js",[],["165","166"],"D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\reportWebVitals.js",[],"D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\Cart\\Cart.jsx",["167"],"import React, { useEffect, useState } from 'react';\nimport ListCart from './Component/ListCart';\nimport alertify from 'alertifyjs';\nimport { Link, Redirect } from 'react-router-dom';\nimport CartAPI from '../API/CartAPI';\nimport convertMoney from '../convertMoney';\n\nfunction Cart(props) {\n  const [cart, setCart] = useState([]);\n\n  const [total, setTotal] = useState(0);\n\n  let user = JSON.parse(localStorage.getItem('user'));\n  //State dùng để Load dữ liệu từ API\n  const [loadData, setLoadData] = useState(false);\n\n  //Hàm này dùng để load dữ liệu từ API\n  //Khi người dùng đã đăng nhập\n  useEffect(() => {\n    const fetchData = async () => {\n      if (user) {\n        const response = await CartAPI.getCarts('/carts');\n\n        setCart(response);\n        getTotal(response);\n        return;\n      }\n    };\n\n    fetchData();\n\n    setLoadData(false);\n  }, [loadData]);\n\n  //Hàm này dùng để tính tổng tiền carts\n  function getTotal(carts) {\n    let sub_total = 0;\n    carts.map(value => {\n      return (sub_total +=\n        parseInt(value.priceProduct) * parseInt(value.quantity));\n    });\n\n    setTotal(sub_total);\n  }\n\n  //Hàm này dùng để truyền xuống cho component con xử và trả ngược dữ liệu lại component cha\n  const onDeleteCart = async productId => {\n    if (user) {\n      const response = await CartAPI.deleteToCart(productId);\n      if (response) {\n        user.cart = response;\n        localStorage.setItem('user', JSON.stringify(user));\n        setLoadData(true);\n        alertify.set('notifier', 'position', 'bottom-left');\n        alertify.error('Bạn Đã Xóa Hàng Thành Công!');\n      }\n    }\n  };\n\n  //Hàm này dùng để truyền xuống cho component con xử và trả ngược dữ liệu lại component cha\n  const onUpdateCount = async (productId, quantity) => {\n    if (user) {\n      // user đã đăng nhập\n      //Sau khi nhận được dữ liệu ở component con truyền lên thì sẽ gọi API xử lý dữ liệu\n      const response = await CartAPI.putToCart({ productId, quantity });\n      if (response) {\n        user.cart = response;\n        localStorage.setItem('user', JSON.stringify(user));\n        setLoadData(true);\n        alertify.set('notifier', 'position', 'bottom-left');\n        alertify.success('Bạn Đã Sửa Hàng Thành Công!');\n      }\n    }\n  };\n\n  //Hàm này dùng để redirect đến page checkout\n  const [redirect, setRedirect] = useState(false);\n\n  const onCheckout = () => {\n    if (!user) {\n      alertify.set('notifier', 'position', 'bottom-left');\n      alertify.error('Vui Lòng Đăng Nhập!');\n      return;\n    }\n\n    if (cart.length === 0) {\n      alertify.set('notifier', 'position', 'bottom-left');\n      alertify.error('Vui Lòng Kiểm Tra Lại Giỏ Hàng!');\n      return;\n    }\n\n    setRedirect(true);\n  };\n\n  return (\n    <div className='container'>\n      <section className='py-5 bg-light'>\n        <div className='container'>\n          <div className='row px-4 px-lg-5 py-lg-4 align-items-center'>\n            <div className='col-lg-6'>\n              <h1 className='h2 text-uppercase mb-0'>Cart</h1>\n            </div>\n            <div className='col-lg-6 text-lg-right'>\n              <nav aria-label='breadcrumb'>\n                <ol className='breadcrumb justify-content-lg-end mb-0 px-0'>\n                  <li className='breadcrumb-item active' aria-current='page'>\n                    Cart\n                  </li>\n                </ol>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </section>\n      <section className='py-5'>\n        <h2 className='h5 text-uppercase mb-4'>Shopping cart</h2>\n        <div className='row'>\n          <div className='col-lg-8 mb-4 mb-lg-0'>\n            <ListCart\n              listCart={cart}\n              onDeleteCart={onDeleteCart}\n              onUpdateCount={onUpdateCount}\n            />\n\n            <div className='bg-light px-4 py-3'>\n              <div className='row align-items-center text-center'>\n                <div className='col-md-6 mb-3 mb-md-0 text-md-left'>\n                  <Link\n                    className='btn btn-link p-0 text-dark btn-sm'\n                    to={`/shop`}\n                  >\n                    <i className='fas fa-long-arrow-alt-left mr-2'> </i>\n                    Continue shopping\n                  </Link>\n                </div>\n                <div className='col-md-6 text-md-right'>\n                  {redirect && <Redirect to={'/checkout'} />}\n                  <span\n                    className='btn btn-outline-dark btn-sm'\n                    onClick={onCheckout}\n                  >\n                    Proceed to checkout\n                    <i className='fas fa-long-arrow-alt-right ml-2'></i>\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className='col-lg-4'>\n            <div className='card border-0 rounded-0 p-lg-4 bg-light'>\n              <div className='card-body'>\n                <h5 className='text-uppercase mb-4'>Cart total</h5>\n                <ul className='list-unstyled mb-0'>\n                  <li className='d-flex align-items-center justify-content-between'>\n                    <strong className='text-uppercase small font-weight-bold'>\n                      Subtotal\n                    </strong>\n                    <span className='text-muted small'>\n                      {convertMoney(total)} VND\n                    </span>\n                  </li>\n                  <li className='border-bottom my-2'></li>\n                  <li className='d-flex align-items-center justify-content-between mb-4'>\n                    <strong className='text-uppercase small font-weight-bold'>\n                      Total\n                    </strong>\n                    <span>{convertMoney(total)} VND</span>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default Cart;\n","D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\Authentication\\SignIn.jsx",["168"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Auth.css';\nimport axios from 'axios';\nimport UserAPI from '../API/UserAPI';\n\nfunction SignIn(props) {\n  const [err, setErr] = useState('');\n  const onSubmit = async e => {\n    e.preventDefault();\n    const user = {\n      email: e.target.email.value,\n      password: e.target.password.value,\n    };\n\n    await UserAPI.postSignIn(user)\n      .then(res => {\n        localStorage.setItem('user', JSON.stringify(res.details));\n        localStorage.setItem('accessToken', res.accessToken);\n        window.location.href = '/';\n      })\n      .catch(err => {\n        setErr(err.response?.data);\n      });\n  };\n\n  return (\n    <div className='limiter'>\n      <div className='container-login100'>\n        <div className='wrap-login100 p-l-55 p-r-55 p-t-65 p-b-50'>\n          <span className='login100-form-title p-b-33'>Sign In</span>\n          <div className='d-flex justify-content-center pb-5'>\n            {err && <span className='text-danger'>{err}</span>}\n          </div>\n          <form onSubmit={onSubmit}>\n            <div className='wrap-input100 validate-input'>\n              <input\n                className='input100'\n                type='email'\n                placeholder='Email'\n                name='email'\n                id='email'\n              />\n            </div>\n\n            <div className='wrap-input100 rs1 validate-input'>\n              <input\n                className='input100'\n                type='password'\n                placeholder='Password'\n                name='password'\n                id='password'\n              />\n            </div>\n\n            <div className='container-login100-form-btn m-t-20'>\n              <button className='login100-form-btn' type='submit'>\n                Sign in\n              </button>\n            </div>\n          </form>\n\n          <div className='text-center p-t-45 p-b-4'>\n            <span className='txt1'>Create an account?</span>\n            &nbsp;\n            <Link to='/signup' className='txt2 hov1'>\n              Sign up\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SignIn;\n","D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\Home\\Home.jsx",[],"D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\Detail\\Detail.jsx",["169","170"],"import React, { useEffect, useState } from 'react';\nimport ProductAPI from '../API/ProductAPI';\nimport { Link, useParams } from 'react-router-dom';\nimport alertify from 'alertifyjs';\nimport CartAPI from '../API/CartAPI';\nimport CommentAPI from '../API/CommentAPI';\nimport convertMoney from '../convertMoney';\nimport { format } from 'timeago.js';\nimport ReactStars from 'react-rating-stars-component';\nimport { ColorRing } from 'react-loader-spinner';\n\nfunction Detail(props) {\n  const [detail, setDetail] = useState({});\n  const [count, setCount] = useState(1);\n\n  //id params cho từng sản phẩm\n  const { id } = useParams();\n\n  // user đã đăng nhập\n  let user = JSON.parse(localStorage.getItem('user'));\n\n  const [product, setProduct] = useState([]);\n\n  const [star, setStar] = useState(5);\n\n  const [comment, setComment] = useState('');\n\n  // Listcomment\n  const [list_comment, set_list_comment] = useState([]);\n\n  // state này dùng để load lại comment khi user gửi comment lên\n  const [load_comment, set_load_comment] = useState(false);\n  const [load, setLoad] = useState(true);\n\n  const firstExample = {\n    size: 15,\n    count: 5,\n    value: 5,\n    color: 'black',\n    activeColor: 'rgb(255, 215, 0)',\n    a11y: true,\n    isHalf: true,\n    emptyIcon: <i className='far fa-star' />,\n    halfIcon: <i className='fa fa-star-half-alt' />,\n    filledIcon: <i className='fa fa-star' />,\n    edit: false,\n  };\n\n  const secondExample = {\n    size: 20,\n    count: 5,\n    color: 'black',\n    activeColor: 'rgb(255, 215, 0)',\n    value: 5,\n    a11y: true,\n    isHalf: true,\n    emptyIcon: <i className='far fa-star' />,\n    halfIcon: <i className='fa fa-star-half-alt' />,\n    filledIcon: <i className='fa fa-star' />,\n    onChange: newValue => {\n      setStar(newValue);\n    },\n  };\n\n  // Hàm này dùng để lấy dữ liệu comment\n  // Hàm này sẽ chạy lại phụ thuộc vào id Param\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await CommentAPI.getCommentProduct(id);\n      set_list_comment(response);\n    };\n\n    fetchData();\n    set_load_comment(false);\n  }, [id, load_comment]);\n\n  // Hàm thay đổi comment\n  const onChangeComment = e => {\n    setComment(e.target.value);\n  };\n\n  // Hàm này dùng để bình luận\n  const handlerComment = () => {\n    if (!user) {\n      alertify.set('notifier', 'position', 'bottom-left');\n      alertify.error('Vui Lòng Đăng Nhập!');\n      return;\n    }\n\n    const fetchSendComment = async () => {\n      const data = {\n        idProduct: id,\n        idUser: user._id,\n        fullName: user.fullName,\n        content: comment,\n        star: star,\n      };\n\n      await CommentAPI.postCommentProduct(id, data);\n      set_load_comment(true);\n    };\n\n    fetchSendComment();\n\n    setComment('');\n  };\n\n  //Hàm này để lấy dữ liệu chi tiết sản phẩm\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await ProductAPI.getDetail(id);\n      setDetail(response);\n      setLoad(false);\n    };\n\n    fetchData();\n  }, [id]);\n\n  //Hàm này gọi API và cắt chỉ lấy 4 sản phẩm\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await ProductAPI.getAPI();\n      setProduct(response);\n    };\n    fetchData();\n  }, []);\n\n  //Phần này là để thay đổi số lượng khi mua sản phẩm\n  const onChangeCount = e => {\n    setCount(e.target.value);\n  };\n\n  //Phần này dùng để xem review hay description\n  const [review, setReview] = useState('description');\n  const handlerReview = value => {\n    setReview(value);\n  };\n\n  //Hàm này là Thêm Sản Phẩm\n  const addToCart = async () => {\n    if (user) {\n      const cart = {\n        productId: id,\n        quantity: count,\n      };\n\n      const response = await CartAPI.postAddToCart(cart);\n      user.cart = response;\n      localStorage.setItem('user', JSON.stringify(user));\n\n      alertify.set('notifier', 'position', 'bottom-left');\n      alertify.success('Bạn Đã Thêm Hàng Thành Công!');\n    } else {\n      alertify.set('notifier', 'position', 'bottom-left');\n      alertify.error('Bạn Cần Đăng Nhập Để Thêm Sản Phẩm Vào Giỏ Hàng!');\n    }\n  };\n\n  return (\n    <section className='py-5'>\n      <div className='container'>\n        {load ? (\n          <ColorRing\n            visible={true}\n            height='80'\n            width='80'\n            ariaLabel='blocks-loading'\n            wrapperStyle={{}}\n            wrapperClass='blocks-wrapper'\n            colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n          />\n        ) : (\n          <>\n            <div className='row mb-5'>\n              <div className='col-lg-6'>\n                <div className='row m-sm-0'>\n                  <div className='col-sm-2 p-sm-0 order-2 order-sm-1 mt-2 mt-sm-0'>\n                    <div\n                      className='owl-thumbs d-flex flex-row flex-sm-column'\n                      data-slider-id='1'\n                    >\n                      {detail.imageURL &&\n                        detail.imageURL.map(img => (\n                          <div className='owl-thumb-item flex-fill mb-2 mr-2 mr-sm-0'>\n                            <img className='w-100' src={img} alt='...' />\n                          </div>\n                        ))}\n                    </div>\n                  </div>\n\n                  <div\n                    id='carouselExampleControls'\n                    className='carousel slide col-sm-10 order-1 order-sm-2'\n                    data-ride='carousel'\n                  >\n                    <div className='carousel-inner owl-carousel product-slider'>\n                      {detail.imageURL &&\n                        detail.imageURL.map((img, i) => (\n                          <div\n                            className={\n                              i == 0 ? 'carousel-item active' : 'carousel-item'\n                            }\n                          >\n                            <img\n                              className='d-block w-100'\n                              src={img}\n                              alt='product slide'\n                            />\n                          </div>\n                        ))}\n                    </div>\n                    <a\n                      className='carousel-control-prev'\n                      href='#carouselExampleControls'\n                      role='button'\n                      data-slide='prev'\n                    >\n                      <span\n                        className='carousel-control-prev-icon'\n                        aria-hidden='true'\n                      ></span>\n                      <span className='sr-only'>Previous</span>\n                    </a>\n                    <a\n                      className='carousel-control-next'\n                      href='#carouselExampleControls'\n                      role='button'\n                      data-slide='next'\n                    >\n                      <span\n                        className='carousel-control-next-icon'\n                        aria-hidden='true'\n                      ></span>\n                      <span className='sr-only'>Next</span>\n                    </a>\n                  </div>\n                </div>\n              </div>\n\n              <div className='col-lg-6'>\n                <br></br>\n                <ReactStars {...firstExample} />\n\n                <h1>{detail.name}</h1>\n                <br></br>\n                <p className='text-muted lead'>\n                  {convertMoney(detail.price)} VND\n                </p>\n                <br></br>\n                <p className='mb-4'>{detail.short_desc}</p>\n                <ul className='list-unstyled small d-inline-block'>\n                  <li className='mb-3 bg-white text-muted'>\n                    <strong className='text-uppercase text-dark'>\n                      Category:\n                    </strong>\n                    <a className='reset-anchor ml-2'>{detail.category}s</a>\n                  </li>\n                </ul>\n                {detail.stock === 0 ? (\n                  <h5 className='mb-2 mt-2 text-danger'>\n                    This product is currently out of stock!\n                  </h5>\n                ) : (\n                  <>\n                    <h6 className='mb-2 mt-2 text-success'>\n                      This product has {detail.stock} items\n                    </h6>\n                    <div className='row align-items-stretch mb-4'>\n                      <div className='col-sm-5 pr-sm-0'>\n                        <div className='border d-flex align-items-center justify-content-between py-1 px-3 bg-white border-white'>\n                          <span className='small text-uppercase text-gray mr-4 no-select'>\n                            Quantity\n                          </span>\n                          <div className='quantity'>\n                            <button\n                              className='dec-btn p-0'\n                              style={{ cursor: 'pointer' }}\n                              disabled={count === 1}\n                              onClick={() => setCount(count - 1)}\n                            >\n                              <i className='fas fa-caret-left'></i>\n                            </button>\n                            <input\n                              className='form-control border-0 shadow-0 p-0'\n                              type='text'\n                              value={count}\n                              onChange={onChangeCount}\n                            />\n                            <button\n                              className='inc-btn p-0'\n                              style={{ cursor: 'pointer' }}\n                              disabled={count === detail.stock}\n                              onClick={() => setCount(count + 1)}\n                            >\n                              <i className='fas fa-caret-right'></i>\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n                      <div className='col-sm-3 pl-sm-0'>\n                        <button\n                          className='btn btn-dark btn-sm btn-block d-flex align-items-center justify-content-center px-0 text-white'\n                          onClick={addToCart}\n                        >\n                          Add to cart\n                        </button>\n                      </div>\n                      <br></br>\n                      <br></br>\n                    </div>\n                  </>\n                )}\n              </div>\n            </div>\n            <div className='form-group'>\n              <label htmlFor='exampleFormControlTextarea1'>Comment:</label>\n              <textarea\n                className='form-control'\n                rows='3'\n                onChange={onChangeComment}\n                value={comment}\n              ></textarea>\n            </div>\n            <div className='d-flex justify-content-between'>\n              <div className='d-flex w-25'>\n                <span className='mt-2'>Evaluate: </span>\n                &nbsp; &nbsp;\n                <ReactStars {...secondExample} />\n              </div>\n              <div>\n                <button\n                  className='btn btn-dark btn-sm btn-block px-0 text-white'\n                  style={{ width: '12rem' }}\n                  onClick={handlerComment}\n                >\n                  Send\n                </button>\n              </div>\n            </div>\n            <br />\n            <ul className='nav nav-tabs border-0'>\n              <li className='nav-item'>\n                <button\n                  className='nav-link fix_comment'\n                  onClick={() => handlerReview('description')}\n                  style={\n                    review === 'description'\n                      ? { backgroundColor: '#383838', color: '#ffffff' }\n                      : { color: '#383838' }\n                  }\n                >\n                  Description\n                </button>\n              </li>\n              <li className='nav-item'>\n                <button\n                  className='nav-link fix_comment'\n                  onClick={() => handlerReview('review')}\n                  style={\n                    review === 'review'\n                      ? { backgroundColor: '#383838', color: '#ffffff' }\n                      : { color: '#383838' }\n                  }\n                >\n                  Reviews\n                </button>\n              </li>\n            </ul>\n            <div className='tab-content mb-5'>\n              {review === 'description' ? (\n                <div className='tab-pane fade show active'>\n                  <div className='pt-4 pb-4 bg-white'>\n                    <h6 className='text-uppercase'>Product description </h6>\n                    <br></br>\n                    <h6\n                      className='text-muted text-small mb-0'\n                      style={{ whiteSpace: 'pre-wrap' }}\n                    >\n                      {detail.long_desc}\n                    </h6>\n                  </div>\n                </div>\n              ) : (\n                <div className='tab-pane fade show active'>\n                  <div className='p-4 p-lg-5 bg-white'>\n                    <div className='row'>\n                      <div className='col-lg-8'>\n                        {list_comment &&\n                          list_comment.map(value => (\n                            <div className='media mb-3' key={value._id}>\n                              <img\n                                className='rounded-circle'\n                                src='https://img.icons8.com/color/36/000000/administrator-male.png'\n                                alt=''\n                                width='50'\n                              />\n                              <div className='media-body ml-3'>\n                                <h6 className='mb-0 small text-uppercase'>\n                                  {value.fullName}\n                                </h6>\n                                <p className=' text-muted mb-0'>\n                                  {format(value.createdAt)}\n                                </p>\n                                <ReactStars\n                                  {...firstExample}\n                                  value={value.star}\n                                />\n                                <h6 className=' mb-0 text-muted'>\n                                  {value.content}\n                                </h6>\n                              </div>\n                            </div>\n                          ))}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          </>\n        )}\n\n        <h2 className='h5 text-uppercase mb-4'>Related products</h2>\n        <div className='row'>\n          {product &&\n            product\n              .filter(\n                el => el.category === detail.category && el._id !== detail._id\n              )\n              .slice(0, 4)\n              .map(value => (\n                <div className='col-lg-3 col-sm-6' key={value._id}>\n                  <div className='product text-center skel-loader'>\n                    <div className='d-block mb-3 position-relative'>\n                      <img\n                        className='img-fluid w-100'\n                        src={value.imageURL[0]}\n                        alt='...'\n                      />\n                      <div className='product-overlay'>\n                        <ul className='mb-0 list-inline'></ul>\n                      </div>\n                    </div>\n                    <h6>\n                      <Link\n                        className='reset-anchor'\n                        to={`/detail/${value._id}`}\n                      >\n                        {value.name}\n                      </Link>\n                    </h6>\n                    <p className='small text-muted'>\n                      {convertMoney(value.price)} VND\n                    </p>\n                  </div>\n                </div>\n              ))}\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default Detail;\n","D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\History\\History.jsx",[],"D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\Checkout\\Checkout.jsx",["171"],"import React, { useEffect, useState } from 'react';\nimport convertMoney from '../convertMoney';\nimport './Checkout.css';\n\nimport { Link } from 'react-router-dom';\nimport HistoryAPI from '../API/HistoryAPI';\nimport alertify from 'alertifyjs';\n\nfunction Checkout(props) {\n  const user = JSON.parse(localStorage.getItem('user'));\n\n  const [carts, setCarts] = useState([]);\n\n  const [total, setTotal] = useState(0);\n\n  const [success, setSuccess] = useState(false);\n\n  //Hàm này dùng để gọi API và render số sản phẩm\n  useEffect(() => {\n    if (user) {\n      const fetchData = async () => {\n        setCarts(user.cart.items);\n        getTotal(user.cart.items);\n      };\n      fetchData();\n    }\n  }, []);\n\n  //Hàm này dùng để tính tổng tiền carts\n  function getTotal(carts) {\n    let sub_total = 0;\n    carts.map(value => {\n      return (sub_total +=\n        parseInt(value.priceProduct) * parseInt(value.quantity));\n    });\n\n    setTotal(sub_total);\n  }\n\n  //Check Validation\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const dataOrder = {\n      fullName: e.target.fullName.value,\n      email: e.target.email.value,\n      phone: e.target.phone.value,\n      address: e.target.address.value,\n      total: total,\n    };\n\n    const response = await HistoryAPI.postOrder(dataOrder);\n    if (response) {\n      alertify.set('notifier', 'position', 'bottom-left');\n      alertify.success('Bạn Đã Đặt Hàng Thành Công!');\n      setSuccess(true);\n    }\n  };\n\n  return (\n    <div>\n      <div className='container'>\n        <section className='py-5 bg-light'>\n          <div className='container'>\n            <div className='row px-4 px-lg-5 py-lg-4 align-items-center'>\n              <div className='col-lg-6'>\n                <h1 className='h2 text-uppercase mb-0'>Checkout</h1>\n              </div>\n              <div className='col-lg-6 text-lg-right'>\n                <nav aria-label='breadcrumb'>\n                  <ol className='breadcrumb justify-content-lg-end mb-0 px-0'>\n                    <li className='breadcrumb-item'>\n                      <Link to='/'>Home</Link>\n                    </li>\n                    <li className='breadcrumb-item'>\n                      <Link to='/cart'>Cart</Link>\n                    </li>\n                    <li className='breadcrumb-item active' aria-current='page'>\n                      Checkout\n                    </li>\n                  </ol>\n                </nav>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        {!success && (\n          <section className='py-5'>\n            <h2 className='h5 text-uppercase mb-4'>Billing details</h2>\n            <div className='row'>\n              <div className='col-lg-8'>\n                <form type='submit' onSubmit={handleSubmit}>\n                  <div className='row'>\n                    <div className='col-lg-12 form-group'>\n                      <label\n                        className='text-small text-uppercase'\n                        htmlFor='Fullname'\n                      >\n                        Full Name:\n                      </label>\n                      <input\n                        className='form-control form-control-lg'\n                        defaultValue={user?.fullName}\n                        type='text'\n                        name='fullName'\n                        id='fullName'\n                        required\n                      />\n                    </div>\n                    <div className='col-lg-12 form-group'>\n                      <label\n                        className='text-small text-uppercase'\n                        htmlFor='Email'\n                      >\n                        Email:{' '}\n                      </label>\n                      <input\n                        className='form-control form-control-lg'\n                        defaultValue={user?.email}\n                        type='email'\n                        name='email'\n                        id='email'\n                        required\n                      />\n                    </div>\n                    <div className='col-lg-12 form-group'>\n                      <label\n                        className='text-small text-uppercase'\n                        htmlFor='Phone'\n                      >\n                        Phone Number:{' '}\n                      </label>\n                      <input\n                        className='form-control form-control-lg'\n                        defaultValue={user?.phone}\n                        type='text'\n                        name='phone'\n                        id='phone'\n                        required\n                      />\n                    </div>\n                    <div className='col-lg-12 form-group'>\n                      <label\n                        className='text-small text-uppercase'\n                        htmlFor='Address'\n                      >\n                        Address:{' '}\n                      </label>\n                      <input\n                        className='form-control form-control-lg'\n                        type='text'\n                        name='address'\n                        id='address'\n                        placeholder='Enter Your Address Here!'\n                        required\n                      />\n                    </div>\n                    <div className='col-lg-12 form-group'>\n                      <button\n                        className='btn btn-dark'\n                        style={{ color: 'white' }}\n                        type='submit'\n                      >\n                        Place order\n                      </button>\n                    </div>\n                  </div>\n                </form>\n              </div>\n              <div className='col-lg-4'>\n                <div className='card border-0 rounded-0 p-lg-4 bg-light'>\n                  <div className='card-body'>\n                    <h5 className='text-uppercase mb-4'>Your order</h5>\n                    <ul className='list-unstyled mb-0'>\n                      {carts &&\n                        carts.map(value => (\n                          <div key={value._id}>\n                            <li className='d-flex align-items-center justify-content-between'>\n                              <strong className='small font-weight-bold'>\n                                {value.nameProduct}\n                              </strong>\n                              <span className='text-muted small'>\n                                {`${convertMoney(value.priceProduct)} x\n                                ${value.quantity}`}\n                              </span>\n                            </li>\n                            <li className='border-bottom my-2'></li>\n                          </div>\n                        ))}\n                      <li className='d-flex align-items-center justify-content-between'>\n                        <strong className='text-uppercase small font-weight-bold'>\n                          Total\n                        </strong>\n                        <span>{convertMoney(total)} VND</span>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </section>\n        )}\n\n        {success && (\n          <section className='py-5'>\n            <div className='p-5'>\n              <h1>You Have Successfully Ordered!</h1>\n              <p style={{ fontSize: '1.2rem' }}>Please Check Your Email.</p>\n            </div>\n          </section>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Checkout;\n","D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\Shop\\Shop.jsx",[],"D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\Authentication\\SignUp.jsx",[],"D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\Share\\Footer\\Footer.jsx",[],"D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\Share\\Header\\Header.jsx",[],"D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\Share\\Chat\\Chat.jsx",["172","173"],"import React, { useEffect, useState } from 'react';\nimport './Chat.css';\n\nimport ChatRoomsAPI from '../../API/ChatRoomsAPI';\n\nimport io from 'socket.io-client';\nconst socket = io('https://boutiqueshop.herokuapp.com/', {\n  transports: ['websocket'],\n});\n\nfunction Chat(props) {\n  const [activeChat, setActiveChat] = useState(false);\n  const [textMessage, setTextMessage] = useState('');\n  const [message, setMessage] = useState();\n  const [roomId, setRoomId] = useState(localStorage.getItem('roomId') || '');\n\n  const user = JSON.parse(localStorage.getItem('user'));\n\n  const [load, setLoad] = useState(false);\n\n  // Hàm này dùng để mở hộp thoại chat\n  const onChat = async () => {\n    if (!activeChat && !roomId) {\n      let response;\n      if (user) {\n        response = await ChatRoomsAPI.createNewRoom();\n      } else {\n        response = await ChatRoomsAPI.createNewRoom();\n      }\n      setMessage(response);\n      setRoomId(response);\n      localStorage.setItem('roomId', response);\n    }\n    setActiveChat(!activeChat);\n  };\n\n  const handlerSend = async () => {\n    //Sau đó nó emit dữ liệu lên server bằng socket với key send_message và value data\n    if (textMessage === '') return;\n\n    const data = {\n      message: textMessage,\n      roomId: roomId,\n      isAdmin: false,\n    };\n\n    // Check if text equal \"/end\" then end room\n    if (roomId && textMessage.toLowerCase() === '/end') {\n      localStorage.removeItem('roomId');\n      setTextMessage('');\n      setRoomId('');\n      setMessage([]);\n      setActiveChat(false);\n    }\n\n    //Tiếp theo nó sẽ postdata lên api đưa dữ liệu vào database\n    await ChatRoomsAPI.addMessage(data);\n    setTextMessage('');\n\n    setTimeout(() => {\n      setLoad(true);\n      socket.emit('send_message', data);\n    }, 200);\n  };\n\n  const fetchData = async () => {\n    const response = await ChatRoomsAPI.getMessageByRoomId(roomId);\n    if (response.isEnd) {\n      localStorage.removeItem('roomId');\n      setTextMessage('');\n      setRoomId('');\n      setMessage([]);\n      setActiveChat(false);\n    }\n\n    setMessage(response);\n  };\n\n  // Hàm này dùng để load dữ liệu message của user khi user gửi tin nhán\n  useEffect(() => {\n    if (load) {\n      fetchData();\n      setLoad(false);\n    }\n  }, [load]);\n\n  useEffect(() => {\n    setLoad(true);\n  }, [roomId]);\n\n  //Hàm này dùng để nhận socket từ server gửi lên\n  useEffect(() => {\n    //Nhận dữ liệu từ server gửi lên thông qua socket với key receive_message\n    socket.on('receive_message', data => {\n      //Sau đó nó sẽ setLoad gọi lại hàm useEffect lấy lại dữ liệu\n      setTimeout(() => {\n        setLoad(true);\n      }, 100);\n    });\n  }, []);\n\n  return (\n    <div className='wrapper_chat'>\n      <div className='chat_messenger' onClick={onChat}>\n        <svg x='0' y='0' width='60px' height='60px'>\n          <g stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n            <g>\n              <circle fill='#383838' cx='30' cy='30' r='30'></circle>\n              <svg x='10' y='10'>\n                <g transform='translate(0.000000, -10.000000)' fill='#FFFFFF'>\n                  <g id='logo' transform='translate(0.000000, 10.000000)'>\n                    <path\n                      d='M20,0 C31.2666,0 40,8.2528 40,19.4 C40,30.5472 31.2666,38.8 \n\t\t\t\t\t\t\t\t20,38.8 C17.9763,38.8 16.0348,38.5327 14.2106,38.0311 C13.856,37.9335 13.4789,37.9612 \n\t\t\t\t\t\t\t\t13.1424,38.1098 L9.1727,39.8621 C8.1343,40.3205 6.9621,39.5819 6.9273,38.4474 L6.8184,34.8894 \n\t\t\t\t\t\t\t\tC6.805,34.4513 6.6078,34.0414 6.2811,33.7492 C2.3896,30.2691 0,25.2307 0,19.4 C0,8.2528 8.7334,0 \n\t\t\t\t\t\t\t\t20,0 Z M7.99009,25.07344 C7.42629,25.96794 8.52579,26.97594 9.36809,26.33674 L15.67879,21.54734 \n\t\t\t\t\t\t\t\tC16.10569,21.22334 16.69559,21.22164 17.12429,21.54314 L21.79709,25.04774 C23.19919,26.09944 \n\t\t\t\t\t\t\t\t25.20039,25.73014 26.13499,24.24744 L32.00999,14.92654 C32.57369,14.03204 31.47419,13.02404 \n\t\t\t\t\t\t\t\t30.63189,13.66324 L24.32119,18.45264 C23.89429,18.77664 23.30439,18.77834 22.87569,18.45674 \n\t\t\t\t\t\t\t\tL18.20299,14.95224 C16.80079,13.90064 14.79959,14.26984 13.86509,15.75264 L7.99009,25.07344 Z'\n                    ></path>\n                  </g>\n                </g>\n              </svg>\n            </g>\n          </g>\n        </svg>\n      </div>\n\n      {activeChat && (\n        <div className='active_chat animate__animated animate__jackInTheBox'>\n          <div style={{ width: '100%' }}>\n            <div\n              className='card card-bordered fix_boderChat'\n              style={{ width: 'fit-content' }}\n            >\n              <div className='card-header'>\n                <h4 className='card-title'>\n                  <strong>Customer Support</strong>\n                </h4>{' '}\n                <a className='btn btn-xs btn-secondary' href='#'>\n                  Let's Chat App\n                </a>\n              </div>\n              <div className='ps-container ps-theme-default ps-active-y fix_scoll'>\n                {message &&\n                  message.message?.map(value =>\n                    !value.isAdmin ? (\n                      <div\n                        className='media media-chat media-chat-reverse'\n                        key={value.id}\n                      >\n                        <div className='media-body'>\n                          <p>{value.message}</p>\n                        </div>\n                      </div>\n                    ) : (\n                      <div className='media media-chat' key={value.id}>\n                        {' '}\n                        <img\n                          className='avatar'\n                          src='https://img.icons8.com/color/36/000000/administrator-male.png'\n                          alt='...'\n                        />\n                        <div className='media-body' key={value.id}>\n                          <p>{value.message}</p>\n                        </div>\n                      </div>\n                    )\n                  )}\n              </div>\n              <div className='publisher bt-1 border-light'>\n                <img\n                  className='avatar avatar-xs'\n                  src='https://img.icons8.com/color/36/000000/administrator-male.png'\n                  alt='...'\n                />\n                <input\n                  type='text'\n                  placeholder='Enter Message!'\n                  onChange={e => setTextMessage(e.target.value)}\n                  value={textMessage}\n                  style={{ width: '80%' }}\n                  onKeyPress={e => {\n                    if (e.key === 'Enter') {\n                      handlerSend();\n                    }\n                  }}\n                />\n                <span\n                  onClick={handlerSend}\n                  className='publisher-btn text-info'\n                  data-abc='true'\n                >\n                  <i className='fa fa-paper-plane'></i>\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Chat;\n","D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\convertMoney.js",[],"D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\Authentication\\LogoutLink.jsx",[],"D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\Authentication\\Name.jsx",["174","175","176"],"import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Name({ nameUser }) {\n  return (\n    <li className='nav-item dropdown'>\n      <a\n        className='nav-link dropdown-toggle'\n        style={{ cursor: 'pointer' }}\n        id='pagesDropdown'\n        data-toggle='dropdown'\n        aria-haspopup='true'\n        aria-expanded='false'\n      >\n        <i className='fas fa-user-alt mr-1 text-gray'></i>\n        {nameUser}\n      </a>\n      <div className='dropdown-menu mt-3' aria-labelledby='pagesDropdown'>\n        {/* <Link\n\t\t\t\t\tclassName='dropdown-item border-0 transition-link'\n\t\t\t\t\tto={'/manage'}>\n\t\t\t\t\tManage\n\t\t\t\t</Link> */}\n        <Link\n          className='dropdown-item border-0 transition-link'\n          to={'/history'}\n        >\n          History\n        </Link>\n      </div>\n    </li>\n  );\n}\n\nexport default Name;\n","D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\API\\UserAPI.jsx",[],"D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\Authentication\\LoginLink.jsx",[],"D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\Cart\\Component\\ListCart.jsx",["177"],"import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport convertMoney from '../../convertMoney';\n\nListCart.propTypes = {\n  listCart: PropTypes.array,\n  onDeleteCart: PropTypes.func,\n  onUpdateCount: PropTypes.func,\n};\n\nListCart.defaultProps = {\n  listCart: [],\n  onDeleteCart: null,\n  onUpdateCount: null,\n};\n\nfunction ListCart(props) {\n  const { listCart, onDeleteCart, onUpdateCount } = props;\n\n  const handleChangeText = (e, productId) => {\n    onUpdateCount(productId, e.target.value);\n  };\n\n  const handleDown = (productId, quantity) => {\n    if (!onUpdateCount) {\n      return;\n    }\n\n    //Trước khi trả dữ liệu về component cha thì phải thay đổi biến count\n    const updateQuantity = parseInt(quantity) - 1;\n\n    onUpdateCount(productId, updateQuantity);\n  };\n\n  const handleUp = (productId, quantity) => {\n    if (!onUpdateCount) {\n      return;\n    }\n\n    //Trước khi trả dữ liệu về component cha thì phải thay đổi biến count\n    const updateQuantity = parseInt(quantity) + 1;\n    onUpdateCount(productId, updateQuantity);\n  };\n\n  return (\n    <div className='table-responsive mb-4'>\n      <table className='table'>\n        <thead className='bg-light'>\n          <tr className='text-center'>\n            <th className='border-0' scope='col'>\n              {' '}\n              <strong className='text-small text-uppercase'>Image</strong>\n            </th>\n            <th className='border-0' scope='col'>\n              {' '}\n              <strong className='text-small text-uppercase'>Product</strong>\n            </th>\n            <th className='border-0' scope='col'>\n              {' '}\n              <strong className='text-small text-uppercase'>Price</strong>\n            </th>\n            <th className='border-0' scope='col'>\n              {' '}\n              <strong className='text-small text-uppercase'>Quantity</strong>\n            </th>\n            <th className='border-0' scope='col'>\n              {' '}\n              <strong className='text-small text-uppercase'>Total</strong>\n            </th>\n            <th className='border-0' scope='col'>\n              {' '}\n              <strong className='text-small text-uppercase'>Remove</strong>\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {listCart &&\n            listCart.map((value, index) => (\n              <tr className='text-center' key={index}>\n                <td className='pl-0 border-0'>\n                  <div className='media align-items-center justify-content-center'>\n                    <Link\n                      className='reset-anchor d-block animsition-link'\n                      to={`/detail/${value.productId}`}\n                    >\n                      <img src={value.img} alt='...' width='70' />\n                    </Link>\n                  </div>\n                </td>\n                <td className='align-middle border-0'>\n                  <div className='media align-items-center justify-content-center'>\n                    <Link\n                      className='reset-anchor h6 animsition-link'\n                      to={`/detail/${value.productId}`}\n                    >\n                      {value.nameProduct}\n                    </Link>\n                  </div>\n                </td>\n\n                <td className='align-middle border-0'>\n                  <p className='mb-0 small'>\n                    {convertMoney(value.priceProduct)} VND\n                  </p>\n                </td>\n                <td className='align-middle border-0'>\n                  <div className='quantity justify-content-center'>\n                    <button\n                      className='dec-btn p-0'\n                      style={{ cursor: 'pointer' }}\n                      disabled={value.quantity === 1}\n                      onClick={() =>\n                        handleDown(value.productId, value.quantity)\n                      }\n                    >\n                      <i className='fas fa-caret-left'></i>\n                    </button>\n                    <input\n                      className='form-control form-control-sm border-0 shadow-0 p-0'\n                      type='text'\n                      value={value.quantity}\n                      onChange={e => handleChangeText(e, value.productId)}\n                    />\n                    <button\n                      className='inc-btn p-0'\n                      style={{ cursor: 'pointer' }}\n                      onClick={() => handleUp(value.productId, value.quantity)}\n                    >\n                      <i className='fas fa-caret-right'></i>\n                    </button>\n                  </div>\n                </td>\n                <td className='align-middle border-0'>\n                  <p className='mb-0 small'>\n                    {convertMoney(\n                      parseInt(value.priceProduct) * parseInt(value.quantity)\n                    )}{' '}\n                    VND\n                  </p>\n                </td>\n                <td className='align-middle border-0'>\n                  <button\n                    className='reset-anchor remove_cart'\n                    style={{ cursor: 'pointer' }}\n                    onClick={() => onDeleteCart(value.productId)}\n                  >\n                    <i className='fas fa-trash-alt small text-muted'></i>\n                  </button>\n                </td>\n              </tr>\n            ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default ListCart;\n","D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\API\\ProductAPI.jsx",[],"D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\API\\CartAPI.jsx",[],"D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\API\\MessengerAPI.jsx",[],"D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\API\\CommentAPI.jsx",[],"D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\API\\ChatRoomsAPI.jsx",[],"D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\History\\Component\\DetailHistory.jsx",["178"],"import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport HistoryAPI from '../../API/HistoryAPI';\nimport convertMoney from '../../convertMoney';\nimport { ColorRing } from 'react-loader-spinner';\n\nfunction DetailHistory(props) {\n  const { id } = useParams();\n\n  const [cart, setCart] = useState([]);\n\n  const [information, setInformation] = useState({});\n  const [load, setLoad] = useState(true);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await HistoryAPI.getDetail(id);\n\n      setCart(response.orders.items);\n\n      setInformation(response);\n      setLoad(false);\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div className='container'>\n      <section className='py-5 bg-light'>\n        <div className='container'>\n          <div className='row px-4 px-lg-5 py-lg-4 align-items-center'>\n            <div className='col-lg-6'>\n              <h1 className='h2 text-uppercase mb-0'>Detail Order</h1>\n            </div>\n            <div className='col-lg-6 text-lg-right'>\n              <nav aria-label='breadcrumb'>\n                <ol className='breadcrumb justify-content-lg-end mb-0 px-0'>\n                  <li className='breadcrumb-item active'>Detail</li>\n                </ol>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </section>\n      {load ? (\n        <ColorRing\n          visible={true}\n          height='80'\n          width='80'\n          ariaLabel='blocks-loading'\n          wrapperStyle={{}}\n          wrapperClass='blocks-wrapper'\n          colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n        />\n      ) : (\n        <>\n          <div className='p-5'>\n            <h1 className='h2 text-uppercase'>Information Order</h1>\n            <p>ID User: {information.userId}</p>\n            <p>Full Name: {information.fullName}</p>\n            <p>Phone: {information.phone}</p>\n            <p>Address: {information.address}</p>\n            <p>Total: {convertMoney(information.total)} VND </p>\n          </div>\n\n          <div className='table-responsive pb-5'>\n            <table className='table'>\n              <thead className='bg-light'>\n                <tr className='text-center'>\n                  <th className='border-0' scope='col'>\n                    {' '}\n                    <strong className='text-small text-uppercase'>\n                      ID Product\n                    </strong>\n                  </th>\n                  <th className='border-0' scope='col'>\n                    {' '}\n                    <strong className='text-small text-uppercase'>Image</strong>\n                  </th>\n                  <th className='border-0' scope='col'>\n                    {' '}\n                    <strong className='text-small text-uppercase'>Name</strong>\n                  </th>\n                  <th className='border-0' scope='col'>\n                    {' '}\n                    <strong className='text-small text-uppercase'>Price</strong>\n                  </th>\n                  <th className='border-0' scope='col'>\n                    {' '}\n                    <strong className='text-small text-uppercase'>Count</strong>\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                {cart &&\n                  cart.map(value => (\n                    <tr className='text-center' key={value.productId}>\n                      <td className='align-middle border-0'>\n                        <h6 className='mb-0'>{value.productId}</h6>\n                      </td>\n                      <td className='pl-0 border-0'>\n                        <div className='media align-items-center justify-content-center'>\n                          <Link\n                            className='reset-anchor d-block animsition-link'\n                            to={`/detail/${value.productId}`}\n                          >\n                            <img src={value.img} alt='...' width='200' />\n                          </Link>\n                        </div>\n                      </td>\n                      <td className='align-middle border-0'>\n                        <Link to={`/detail/${value.productId}`}>\n                          <h6 className='mb-0'>{value.nameProduct}</h6>\n                        </Link>\n                      </td>\n                      <td className='align-middle border-0'>\n                        <h6 className='mb-0'>\n                          {convertMoney(value.priceProduct)} VND\n                        </h6>\n                      </td>\n                      <td className='align-middle border-0'>\n                        <h6 className='mb-0'>{value.quantity}</h6>\n                      </td>\n                    </tr>\n                  ))}\n              </tbody>\n            </table>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default DetailHistory;\n","D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\History\\Component\\MainHistory.jsx",[],"D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\Share\\img\\Image.jsx",[],"D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\Shop\\Component\\Search.jsx",[],"D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\Shop\\Component\\Pagination.jsx",[],"D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\Shop\\Component\\SortProduct.jsx",[],"D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\Shop\\Component\\Products.jsx",["179"],"import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport convertMoney from '../../convertMoney';\n\nProducts.propTypes = {\n  products: PropTypes.array,\n  sort: PropTypes.string,\n};\n\nProducts.defaultProps = {\n  products: [],\n  sort: '',\n};\n\nfunction Products(props) {\n  const { products, sort } = props;\n\n  if (sort === 'DownToUp') {\n    products.sort((a, b) => {\n      return a.price - b.price;\n    });\n  } else if (sort === 'UpToDown') {\n    products.sort((a, b) => {\n      return b.price - a.price;\n    });\n  }\n\n  return (\n    <div className='row'>\n      {/* -------------Product----------------- */}\n\n      {products &&\n        products.map(value => (\n          <div className='col-lg-4 col-sm-6 Section_Category' key={value._id}>\n            <div className='product text-center'>\n              <div className='position-relative mb-3'>\n                <Link className='d-block' to={`/detail/${value._id}`}>\n                  <div className='badge text-white badge-'></div>\n                  <img\n                    className='img-fluid'\n                    src={value.imageURL[0]}\n                    alt='...'\n                  />\n                </Link>\n                <div className='product-overlay'>\n                  <ul className='mb-0 list-inline'>\n                    <li className='list-inline-item m-0 p-0'>\n                      <span className='btn btn-sm btn-outline-dark'>\n                        <i className='far fa-heart'></i>\n                      </span>\n                    </li>\n                    <li className='list-inline-item m-0 p-0'>\n                      <Link\n                        className='btn btn-sm btn-dark'\n                        to={`/detail/${value._id}`}\n                      >\n                        Add to cart\n                      </Link>\n                    </li>\n                    <li className='list-inline-item mr-0'>\n                      {/* Dùng Modal phải có href để nó hiện ra thằng đó và thuộc tính data-toggle=\"modal\" để mở modal*/}\n                      <a\n                        className='btn btn-sm btn-outline-dark'\n                        href={`#product_${value._id}`}\n                        data-toggle='modal'\n                      >\n                        <i className='fas fa-expand'></i>\n                      </a>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n              <h6>\n                {' '}\n                <Link className='reset-anchor' to={`/detail/${value._id}`}>\n                  {value.name}\n                </Link>\n              </h6>\n              <p className='small text-muted'>\n                ${convertMoney(value.price)} VND\n              </p>\n            </div>\n          </div>\n        ))}\n      {/* -------------Product----------------- */}\n    </div>\n  );\n}\n\nexport default Products;\n","D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\Shop\\Component\\IndexPage.jsx",["180"],"import React from 'react';\nimport PropTypes from 'prop-types';\n\nIndexPage.propTypes = {\n  indexPage: PropTypes.array,\n  handlerChangePage: PropTypes.func,\n  pagination: PropTypes.object,\n};\n\nIndexPage.defaultProps = {\n  indexPage: null,\n  handlerChangePage: null,\n  pagination: {},\n};\n\nfunction IndexPage(props) {\n  const { indexPage, handlerChangePage, pagination } = props;\n\n  const { page } = pagination;\n\n  const onIndexPage = value => {\n    if (!handlerChangePage) {\n      return;\n    }\n\n    handlerChangePage(value);\n  };\n\n  return (\n    <div className='d-flex'>\n      {indexPage &&\n        indexPage.map(value => (\n          <li\n            className={\n              value === parseInt(page) ? 'page-item active' : 'page-item'\n            }\n            key={value}\n            onClick={() => onIndexPage(value)}\n          >\n            <a className='page-link'>{value}</a>\n          </li>\n        ))}\n    </div>\n  );\n}\n\nexport default IndexPage;\n",["181","182"],"D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\API\\HistoryAPI.jsx",[],"D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\API\\axiosClient.jsx",[],"D:\\Funix\\NodeJS\\ASM\\ASM 3\\client\\src\\ScrollToWrap.jsx",[],{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","replacedBy":"186"},{"ruleId":"183","replacedBy":"187"},{"ruleId":"185","replacedBy":"188"},{"ruleId":"189","severity":1,"message":"190","line":33,"column":6,"nodeType":"191","endLine":33,"endColumn":16,"suggestions":"192"},{"ruleId":"193","severity":1,"message":"194","line":4,"column":8,"nodeType":"195","messageId":"196","endLine":4,"endColumn":13},{"ruleId":"197","severity":1,"message":"198","line":201,"column":33,"nodeType":"199","messageId":"200","endLine":201,"endColumn":35},{"ruleId":"201","severity":1,"message":"202","line":256,"column":21,"nodeType":"203","endLine":256,"endColumn":54},{"ruleId":"189","severity":1,"message":"190","line":27,"column":6,"nodeType":"191","endLine":27,"endColumn":8,"suggestions":"204"},{"ruleId":"189","severity":1,"message":"205","line":85,"column":6,"nodeType":"191","endLine":85,"endColumn":12,"suggestions":"206"},{"ruleId":"201","severity":1,"message":"207","line":142,"column":17,"nodeType":"203","endLine":142,"endColumn":66},{"ruleId":"193","severity":1,"message":"208","line":1,"column":17,"nodeType":"195","messageId":"196","endLine":1,"endColumn":26},{"ruleId":"193","severity":1,"message":"209","line":1,"column":28,"nodeType":"195","messageId":"196","endLine":1,"endColumn":36},{"ruleId":"201","severity":1,"message":"202","line":7,"column":7,"nodeType":"203","endLine":14,"endColumn":8},{"ruleId":"193","severity":1,"message":"209","line":1,"column":17,"nodeType":"195","messageId":"196","endLine":1,"endColumn":25},{"ruleId":"189","severity":1,"message":"210","line":26,"column":6,"nodeType":"191","endLine":26,"endColumn":8,"suggestions":"211"},{"ruleId":"193","severity":1,"message":"208","line":1,"column":17,"nodeType":"195","messageId":"196","endLine":1,"endColumn":26},{"ruleId":"201","severity":1,"message":"202","line":40,"column":13,"nodeType":"203","endLine":40,"endColumn":38},{"ruleId":"183","replacedBy":"212"},{"ruleId":"185","replacedBy":"213"},"no-native-reassign",["214"],"no-negated-in-lhs",["215"],["214"],["215"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["216"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["217"],"React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["218"],"The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useEffect' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["219"],["214"],["215"],"no-global-assign","no-unsafe-negation",{"desc":"220","fix":"221"},{"desc":"222","fix":"223"},{"desc":"224","fix":"225"},{"desc":"226","fix":"227"},"Update the dependencies array to be: [loadData, user]",{"range":"228","text":"229"},"Update the dependencies array to be: [user]",{"range":"230","text":"231"},"Update the dependencies array to be: [fetchData, load]",{"range":"232","text":"233"},"Update the dependencies array to be: [id]",{"range":"234","text":"235"},[857,867],"[loadData, user]",[696,698],"[user]",[2243,2249],"[fetchData, load]",[685,687],"[id]"]